<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:amq="http://activemq.org/config/1.0"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://activemq.org/config/1.0 http://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-2.5.xsd">

	<!--  ActiveMQ Broker -->
	<amq:broker useJmx="false" persistent="false">
		<amq:transportConnectors>
			<amq:transportConnector uri="tcp://localhost:0" />
		</amq:transportConnectors>
	</amq:broker>

	<!--  ActiveMQ destination for payments  -->
	<amq:queue id="queue.payment" physicalName="queue.Payments" />

	<!-- JMS ConnectionFactory to use -->
	<amq:connectionFactory id="jmsFactory" brokerURL="vm://localhost" />
	
	<!-- Container used to listen the payments queue. -->
	<jms:listener-container connection-factory="jmsFactory"
		concurrency="10">
		<!-- When a message arrives, the listener will notify the paymentProcessor bean and
			call the method processPayment.
			The paymentProcessor bean does not need to implement MessageListener interface. -->
		<jms:listener destination="queue.Payments"
			ref="paymentProcessor" 
			method="processPayment" />
	</jms:listener-container>
	
	<!-- The template used to send Payment objects to the payment queue. -->
	<bean id="jmsPaymentTemplate"
		class="org.springframework.jms.core.JmsTemplate">
		<constructor-arg>
			<ref bean="jmsFactory" />
		</constructor-arg>
		<property name="defaultDestination" ref="queue.payment" />
	</bean>

</beans>